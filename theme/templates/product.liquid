<!-- /templates/product.liquid -->
{% comment %}
  Get first variant, or deep linked one
{% endcomment %}
{% assign current_variant = product.selected_or_first_available_variant %}

{% comment %}
  Check if the product is on sale and set a variable to be used below.
{% endcomment %}
{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
  {% assign on_sale = true %}
{% endif %}

{% comment %}
  Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}

{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}
<div class="product-wrapper" itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

  <div id="ProductImages" class="product-images">
    {% assign featured_image = current_variant.featured_image | default: product.featured_image %}

    {% comment %}
      Display current variant image, or default first
    {% endcomment %}
    <figure class="product-images__item">
      <img src="{{ featured_image | img_url: '1024x1024' }}" alt="{{ featured_image.alt | escape }}" data-image-id="{{ featured_image.id }}">
    </figure>

    {% comment %}
      Display rest of product images, not repeating the featured one
    {% endcomment %}
    {% for image in product.images %}
      {% unless image contains featured_image %}
      <figure class="product-images__item">
        <img src="{{ image.src | img_url: '1024x1024' }}" alt="{{ image.alt | escape }}" data-image-id="{{ image.id }}">
      </figure>
      {% endunless %}
    {% endfor %}
  </div>

  <div class="product-details">
    <div class="product-heading">
      <h1 class="product-heading__title" itemprop="name">{{ product.title }}</h1>
      <h2 class="product-heading__subtitle">
        <span class="js-product-price">
          {% if on_sale %}
            {{ current_variant.price | money }}
            <s>{{ current_variant.compare_at_price | money }}</s>
          {% else %}
            {{ current_variant.price | money }}
          {% endif %}
        </span>
        {% comment %}
          All themes by Shopify should support the Product Reviews app out of the box.
          https://apps.shopify.com/product-reviews
        {% endcomment %}
        <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
      </h2>
    </div>

    <div class="product-description rte" itemprop="description">
      {{ product.description }}
    </div>
  </div>

  <div class="product-actions-container" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
    <meta itemprop="priceCurrency" content="{{ shop.currency }}">
    <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

    <form id="AddToBagForm" method="post" action="/cart/add" enctype="multipart/form-data">
      <div id="ProductMenuSlideout" class="product-menu-slideout">
        <div class="product-menu-slideout__header">
          <h6>
            {{ product.title }}
            <small class="js-product-price" itemprop="price">
              {% if on_sale %}
                {{ current_variant.price | money }}
                <s>{{ current_variant.compare_at_price | money }}</s>
              {% else %}
                {{ current_variant.price | money }}
              {% endif %}
            </small>
          </h6>
          <a class="icon-x js-product-menu-slideout-close" href="#"></a>
        </div>
        <div class="product-menu-slideout__content">
          {% comment %}
            Add product variants as a dropdown.
              - By default, each variant (or combination of variants) will display as its own <option>
              - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
              - Include option_selection.js (as seen at the bottom of this file)
              - This allows you to use JavaScript anytime the variant dropdown changes
              - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
              - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
          {% endcomment %}
          <select id="productSelect" name="id">
            {% for variant in product.variants %}
              {% if variant.available %}
                {% comment %}
                  Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
                <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>
              {% else %}
                <option disabled="disabled">
                  {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                </option>
              {% endif %}
            {% endfor %}
          </select>
        </div>
      </div>

      {% if settings.social_sharing_products %}
        <div id="ProductShareSlideout" class="product-share-slideout">
          <div class="product-share-slideout__header">
            <h6>{{ 'general.social.share' | t }}</h6>
            <a class="icon-x js-product-share-slideout-close" href="#"></a>
          </div>
          <div class="product-share-slideout__content">
            {% include 'social-sharing' %}
          </div>
        </div>
      {% endif %}

      <div class="notification">
        <div class="notification__header">
          <h6>{{ product.title }}</h6>
          <a class="icon-x js-notification-slideout-close" href="#"></a>
        </div>
        <div class="notification__inner"></div>
      </div>

      <div id="ProductActions" class="product-actions{% if settings.social_sharing_products %} product-actions--has-share{% endif %}{% if product.options.size >= 1 and product.options.first != 'Title' %} product-actions--has-options{% endif %}">
        {% include 'breadcrumb' %}

        <div class="product-cart-buttons">
          {% comment %}
            Determining the handle of the collection for the 'continue shopping' link.
          {% endcomment %}

          {% assign collection_url = product.collections.last.url %}
          {% if collection_url == '/collections/frontpage' or collection_url == blank %}
            {% assign collection_url = '/collections/all' %}
          {% endif %}
          <a class="product-cart-buttons__continue-shopping" href="{{ collection_url }}">{{ 'cart.general.continue_shopping' | t }}</a>
          <a class="product-cart-buttons__view-cart" href="/cart">{{ 'cart.general.view_bag' | t }}</a>
        </div>

        <a class="close-notification-button js-notification-slideout-close" href="#">{{ 'general.social.close' | t }}</a>

        {% if settings.social_sharing_products %}
          <a class="share-button js-product-share-slideout-open" href="#">
            <span class="share-button__text">{{ 'general.social.share' | t }}</span>
            <span class="share-button__icon icon-share"></span>
          </a>
          <a id="CloseShare" class="close-share js-product-share-slideout-close" href="#">
            <span class="close-share__text">{{ 'general.social.close' | t }}</span>
          </a>
        {% endif %}

        {% comment %}
          Add button 'select-options' if one or more option and it isn't 'Title'. Could be 'Size'.
        {% endcomment  %}
        {% if product.options.size >= 1 and product.options.first != 'Title' %}
          <a href="#" class="select-options js-product-menu-slideout-open">
            <span class="select-options__text">{{ 'products.product.select_options' | t }}</span>
            <span class="select-options__price js-current-variant-price">{{ current_variant.price | money }}</span>
          </a>
        {% endif %}

        <div id="ProductBuyButtons" class="product-buy-buttons">
          <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
          <button class="add-to-bag" id="AddToBag" name="add" type="submit" title="{{ 'products.product.add_to_bag' | t }}">
            <span id="AddToBagText" class="add-to-bag__text">{{ 'products.product.add_to_bag' | t }}</span>
            <span class="add-to-bag__current-variant-price js-current-variant-price">{{ current_variant.price | money }}</span>
          </button>
        </div>
      </div>
    </form>
  </div>

</div>

{% comment %}
  All themes by Shopify should support the Product Reviews app out of the box.
  https://apps.shopify.com/product-reviews
{% endcomment %}
<div id="shopify-product-reviews" data-id="{{ product.id }}">{{ product.metafields.spr.reviews }}</div>

{% include 'related-products' %}

{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in theme.productPage as needed.

  Currently, theme.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}

<script>
  var selectCallback = function(variant, selector) {
    theme.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector,
      translations: {
        addToBag : {{ 'products.product.add_to_bag' | t | json }},
        soldOut : {{ 'products.product.sold_out' | t | json }},
        unavailable : {{ 'products.product.unavailable' | t | json }}
      }
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.radio-wrapper:eq(0)').prepend('<label for="ProductSelect-option-0" class="single-option-radio__label">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide drop-down selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
